(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.data=e,this._name=this.data.name,this._link=this.data.link,this._ownerId=this.data.owner._id,this._cardId=this.data._id,this._selector=n,this.rendererPopupImage=r,this.renderPopupConfirm=o,this.handlerLikeActive=i,this.handlerLikeNotActive=a}var n,r;return n=t,(r=[{key:"generateElement",value:function(){return this._element=this._getElement(),this._setEventListener(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this.changeNumberLikes(this.data),this._element}},{key:"changeNumberLikes",value:function(e){this._element.querySelector(".element__count").textContent=e.likes.length}},{key:"_getElement",value:function(){var e=document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0);return this._cardImage=e.querySelector(".element__image"),this._element=e,this._element}},{key:"getStatusIdUser",value:function(e){this._booleanStatus=e}},{key:"_setEventListener",value:function(){var e=this;this._button=this._element.querySelector(".element__button"),this._trashButton=this._element.querySelector(".element__trash-icon"),this._booleanStatus&&this._trashButton.classList.add("element__trash-icon_active"),this._button.addEventListener("click",(function(){e._button.classList.contains("element__button_active")?e.handlerLikeNotActive(e.data):e.handlerLikeActive(e.data)})),this._trashButton.addEventListener("click",(function(){e.renderPopupConfirm(e._cardId,e._element)})),this._cardImage.addEventListener("click",this.rendererPopupImage)}},{key:"toggleButtonLike",value:function(){this._button.classList.toggle("element__button_active")}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListener()}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListener",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._handleInputElement=t,e._toggleButtonState(),e._isValid()}))}))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_isValid",value:function(){this._handleInputElement.validity.valid?this._hideInputError():this._showInputError()}},{key:"_showInputError",value:function(){this._errorElement=this._formElement.querySelector(".".concat(this._handleInputElement.id,"-error")),this._handleInputElement.classList.add(this._inputErrorClass),this._errorElement.textContent=this._handleInputElement.validationMessage,this._errorElement.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(){this._errorElement=this._formElement.querySelector(".".concat(this._handleInputElement.id,"-error")),this._handleInputElement.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._handleInputElement=t,e._hideInputError()}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(this._selector),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_active")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_active")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListener",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_active")&&e.close(),t.target.classList.contains("single__cross")&&e.close()}))}},{key:"renderLoading",value:function(e){this._form.querySelector(".form__submit").textContent=e}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(){return u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=s(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},u.apply(this,arguments)}function s(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function l(e,t){return l=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},l(e,t)}function f(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&l(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e){var t,n=e.selectorPopup,r=e.callbackSubmitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n)).callbackSubmitForm=r,t._form=t._popup.querySelector(".form"),t._inputList=t._form.querySelectorAll(".form__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListener",value:function(){var e=this;u(p(a.prototype),"setEventListener",this).call(this),this._form.addEventListener("submit",(function(){e.callbackSubmitForm(e._getInputValues())}))}},{key:"close",value:function(){u(p(a.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){u(p(a.prototype),"renderLoading",this).call(this,e)}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(){return m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=_(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},m.apply(this,arguments)}function _(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function v(e,t){return v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},v(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).elementPopupPicture=t._popup.querySelector(".popup__picture"),t.elementPopupSignature=t._popup.querySelector(".popup__signature"),t}return t=a,(n=[{key:"open",value:function(e){this.elementPopupPicture.src=e.link,this.elementPopupSignature.alt=e.name,this.elementPopupSignature.textContent=e.name,m(g(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},S.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function P(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e)).callbackSubmitForm=t,n._form=n._popup.querySelector(".form"),n}return t=a,(n=[{key:"setEventListener",value:function(){var e=this;S(C(a.prototype),"setEventListener",this).call(this),this._form.addEventListener("submit",(function(){e.callbackSubmitForm(e._idCard)}))}},{key:"saveIdCard",value:function(e){return this._idCard=e}},{key:"setElementCard",value:function(e){this._element=e}},{key:"returnElement",value:function(){return this._element}},{key:"renderLoading",value:function(e){S(C(a.prototype),"renderLoading",this).call(this,e)}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerHtml=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e,t){var n=this;e.forEach((function(e){return n._renderer(e,t)}))}},{key:"addItem",value:function(e){this._containerHtml.prepend(e)}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){var n=t.selectorName,r=t.selectorCareer,o=t.selectorAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.userName=document.querySelector(n),this.userCareer=document.querySelector(r),this.userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this.arrayNewCardData={name:this.userName.textContent,career:this.userCareer.textContent},this.arrayNewCardData}},{key:"setUserInfo",value:function(e){this.userName.textContent=e.name,this.userCareer.textContent=e.about,this.userAvatar.src=e.avatar}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.headers=r}var t,n;return t=e,(n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Возникла ошибка при отправке запроса на сервер: ".concat(e.status))}},{key:"getInfromationUser",value:function(){var e=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-43/users/me",{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"loadCardImages",value:function(){var e=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-43/cards",{method:"GET",headers:this.headers}).then((function(t){return e._getResponseData(t)}))}},{key:"changeProfile",value:function(e){var t=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-43/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:"".concat(e.firstname),about:"".concat(e.career)})}).then((function(e){return t._getResponseData(e)}))}},{key:"addNewCard",value:function(e){var t=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-43/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"deleteCard",value:function(e){var t=this;return this.link="https://mesto.nomoreparties.co/v1/cohort-43/cards/"+"".concat(e),fetch(this.link,{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"likePut",value:function(e){var t=this;return this.link="https://mesto.nomoreparties.co/v1/cohort-43/cards/"+"".concat(e)+"/likes",fetch(this.link,{method:"PUT",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"likeDelete",value:function(e){var t=this;return this.link="https://mesto.nomoreparties.co/v1/cohort-43/cards/"+"".concat(e)+"/likes",fetch(this.link,{method:"DELETE",headers:this.headers}).then((function(e){return t._getResponseData(e)}))}},{key:"changeAvatarPicture",value:function(e){var t=this;return fetch("https://mesto.nomoreparties.co/v1/cohort-43/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._getResponseData(e)}))}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),D=document.querySelector(".profile__edit-button"),x=document.querySelector(".profile__add-button"),N=document.querySelector(".profile__cover"),U=document.querySelector(".form__input_type_name"),V=document.querySelector(".form__input_type_career");function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new A({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-43",headers:{"Content-Type":"application/json",authorization:"b34abb99-bb9c-49f0-b4ee-93cb66614104"}});Promise.all([H.getInfromationUser(),H.loadCardImages()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];M.setUserInfo(o),G.renderItems(i,o)})).catch((function(e){console.log(e)}));var J,G=new R({renderer:function(e,t){t._id===e.owner._id?G.addItem(Q(e,!0)):G.addItem(Q(e,!1))}},".elements"),M=new B({selectorName:".profile__name",selectorCareer:".profile__career",selectorAvatar:".profile__avatar"}),z={};J={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(J.formSelector)).forEach((function(e){var t=new r(e,J),n=e.getAttribute("name");z[n]=t,t.enableValidation()}));var $=new E(".popup_type_image");$.setEventListener();var K=new j(".popup_type_confirm",(function(e){K.renderLoading("Удаляю..."),H.deleteCard(e).then((function(){K.close(),K.returnElement().remove()})).catch((function(e){console.log(e)})).finally((function(){K.renderLoading("Да")}))}));function Q(e,n){var r=new t(e,".template__six-boxes",(function(){$.open(e)}),(function(e,t){K.open(),K.saveIdCard(e),K.setElementCard(t)}),(function(e){H.likePut(e._id).then((function(e){r.changeNumberLikes(e),r.toggleButtonLike()})).catch((function(e){console.log(e)}))}),(function(e){H.likeDelete(e._id).then((function(e){r.changeNumberLikes(e),r.toggleButtonLike()})).catch((function(e){console.log(e)}))}));return r.getStatusIdUser(n),r.generateElement()}K.setEventListener();var W=new h({selectorPopup:".popup_type_new-card",callbackSubmitForm:function(e){W.renderLoading("Создаю..."),H.addNewCard(e).then((function(e){G.addItem(Q(e,!0)),W.close()})).catch((function(e){console.log(e)})).finally((function(){W.renderLoading("Создать")}))}});W.setEventListener();var X=new h({selectorPopup:".popup_type_avatar",callbackSubmitForm:function(e){X.renderLoading("Сохраняю..."),H.changeAvatarPicture(e.link).then((function(e){M.setUserInfo(e),X.close()})).catch((function(e){console.log(e)})).finally((function(){X.renderLoading("Сохранить")}))}});X.setEventListener(),x.addEventListener("click",(function(){z["profile-card"].resetValidation(),W.open()})),N.addEventListener("click",(function(){z["profile-avatar"].resetValidation(),X.open()}));var Y=new h({selectorPopup:".popup_type_edit",callbackSubmitForm:function(e){Y.renderLoading("Сохраняю..."),H.changeProfile(e).then((function(e){M.setUserInfo(e),Y.close()})).catch((function(e){console.log(e)})).finally((function(){Y.renderLoading("Сохранить")}))}});Y.setEventListener(),D.addEventListener("click",(function(){z["profile-edit"].resetValidation();var e=M.getUserInfo();U.value=e.name,V.value=e.career,Y.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQUlnRCxjQUFjaEcsR0FDakJtQyxNQUFLLFNBQUNSLEdBQ0w0QixFQUFjQyxZQUFZN0IsR0FDMUJvRSxFQUFnQjdHLFdBRWpCeUUsT0FBTSxTQUFDQyxHQUNOQyxRQUFRQyxJQUFJRixNQUViaUIsU0FBUSxXQUNQa0IsRUFBZ0JyQixjQUFjLG1CQU1wQ3FCLEVBQWdCeEIsbUJBRWhCNUIsRUFBa0IxRyxpQkFBaUIsU0FBUyxXQUMxQ2dJLEVBQWUsZ0JBQWdCNkIsa0JBQy9CLElBQU1HLEVBQThCMUMsRUFBYzJDLGNBQ2xEcEQsRUFBY3BELE1BQVF1RyxFQUE0QjlMLEtBQ2xENEksRUFBZ0JyRCxNQUFRdUcsRUFBNEI3RSxPQUNwRDJFLEVBQWdCZixXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8veWFuZGV4X3ByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8veWFuZGV4X3ByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8veWFuZGV4X3ByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3lhbmRleF9wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3lhbmRleF9wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8veWFuZGV4X3ByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly95YW5kZXhfcHJha3Rpa3VtLy4vc3JjL3BhZ2UvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhLCBzZWxlY3RvciwgcmVuZGVyZXJQb3B1cEltYWdlLCByZW5kZXJQb3B1cENvbmZpcm0sIGhhbmRsZXJMaWtlQWN0aXZlLCBoYW5kbGVyTGlrZU5vdEFjdGl2ZSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgdGhpcy5fbmFtZSA9IHRoaXMuZGF0YS5uYW1lO1xuICAgIHRoaXMuX2xpbmsgPSB0aGlzLmRhdGEubGluaztcbiAgICB0aGlzLl9vd25lcklkID0gdGhpcy5kYXRhLm93bmVyLl9pZDtcbiAgICB0aGlzLl9jYXJkSWQgPSB0aGlzLmRhdGEuX2lkO1xuICAgIHRoaXMuX3NlbGVjdG9yID0gc2VsZWN0b3I7XG4gICAgdGhpcy5yZW5kZXJlclBvcHVwSW1hZ2UgPSByZW5kZXJlclBvcHVwSW1hZ2U7XG4gICAgdGhpcy5yZW5kZXJQb3B1cENvbmZpcm0gPSByZW5kZXJQb3B1cENvbmZpcm07XG4gICAgdGhpcy5oYW5kbGVyTGlrZUFjdGl2ZSA9IGhhbmRsZXJMaWtlQWN0aXZlO1xuICAgIHRoaXMuaGFuZGxlckxpa2VOb3RBY3RpdmUgPSBoYW5kbGVyTGlrZU5vdEFjdGl2ZTtcbiAgfVxuXG4gIGdlbmVyYXRlRWxlbWVudCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0RWxlbWVudCgpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXIoKTtcblxuICAgIHRoaXMuX2NhcmRJbWFnZS5zcmMgPSB0aGlzLl9saW5rO1xuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuY2hhbmdlTnVtYmVyTGlrZXModGhpcy5kYXRhKTtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIGNoYW5nZU51bWJlckxpa2VzKGFycmF5TGlrZXMpIHtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19jb3VudCcpLnRleHRDb250ZW50ID0gYXJyYXlMaWtlcy5saWtlcy5sZW5ndGg7XG4gIH1cblxuICBfZ2V0RWxlbWVudCgpIHtcbiAgICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fc2VsZWN0b3IpXG4gICAgLmNvbnRlbnRcbiAgICAucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKVxuICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKTtcblxuICAgIHRoaXMuX2VsZW1lbnQgPSBjYXJkRWxlbWVudDtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIGdldFN0YXR1c0lkVXNlcihib29sZWFuU3RhdHVzKSB7XG4gICAgdGhpcy5fYm9vbGVhblN0YXR1cyA9IGJvb2xlYW5TdGF0dXM7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcigpIHtcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19idXR0b24nKTtcbiAgICB0aGlzLl90cmFzaEJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RyYXNoLWljb24nKTtcbiAgICBpZiAodGhpcy5fYm9vbGVhblN0YXR1cykge1xuICAgICAgdGhpcy5fdHJhc2hCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudF9fdHJhc2gtaWNvbl9hY3RpdmUnKTtcbiAgICB9XG5cbiAgICB0aGlzLl9idXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcbiAgICAgIGlmICghdGhpcy5fYnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnZWxlbWVudF9fYnV0dG9uX2FjdGl2ZScpKSB7XG4gICAgICAgIHRoaXMuaGFuZGxlckxpa2VBY3RpdmUodGhpcy5kYXRhKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuaGFuZGxlckxpa2VOb3RBY3RpdmUodGhpcy5kYXRhKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIHRoaXMuX3RyYXNoQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XG4gICAgICB0aGlzLnJlbmRlclBvcHVwQ29uZmlybSh0aGlzLl9jYXJkSWQsIHRoaXMuX2VsZW1lbnQpO1xuICAgIH0pXG5cbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLnJlbmRlcmVyUG9wdXBJbWFnZSk7XG4gIH1cblxuICB0b2dnbGVCdXR0b25MaWtlKCkge1xuICAgIHRoaXMuX2J1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdlbGVtZW50X19idXR0b25fYWN0aXZlJyk7XG4gIH1cblxufVxuIiwiZXhwb3J0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgY29uZmlnKSB7XG4gICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudDtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBjb25maWcuZm9ybVNlbGVjdG9yO1xuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBjb25maWcuaW5wdXRTZWxlY3RvcjtcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGNvbmZpZy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3M7XG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gY29uZmlnLmlucHV0RXJyb3JDbGFzcztcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gY29uZmlnLmVycm9yQ2xhc3M7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH0pO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXIoKTtcbiAgfTtcblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgaWYodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXIoKSB7XG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG5cbiAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuXG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9oYW5kbGVJbnB1dEVsZW1lbnQgPSBpbnB1dEVsZW1lbnQ7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICAgIHRoaXMuX2lzVmFsaWQoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cblxuICBfaXNWYWxpZCgpIHtcbiAgICBpZighdGhpcy5faGFuZGxlSW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcigpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcigpO1xuICAgIH1cbiAgfVxuXG4gIF9zaG93SW5wdXRFcnJvcigpIHtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLl9oYW5kbGVJbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XG4gICAgdGhpcy5faGFuZGxlSW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcbiAgICB0aGlzLl9lcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl9oYW5kbGVJbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoKSB7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5faGFuZGxlSW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIHRoaXMuX2hhbmRsZUlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgdGhpcy5fZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XG4gIH1cblxuICByZXNldFZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcblxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUlucHV0RWxlbWVudCA9IGlucHV0RWxlbWVudDtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKCk7XG4gICAgfSlcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xuICBjb25zdHJ1Y3RvcihzZWxlY3RvclBvcHVwKSB7XG4gICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvclBvcHVwO1xuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9zZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5hZGQoJ3BvcHVwX2FjdGl2ZScpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKCdwb3B1cF9hY3RpdmUnKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZihldnQua2V5ID09PSAnRXNjYXBlJyl7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcigpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZ0KSA9PiB7XG5cbiAgICAgIGlmIChldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfYWN0aXZlJykpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NpbmdsZV9fY3Jvc3MnKSkge1xuICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKHRleHRCdXR0b25Mb2FkKSB7XG4gICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VibWl0JykudGV4dENvbnRlbnQgPSB0ZXh0QnV0dG9uTG9hZDtcbiAgfVxuICB9XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioe3NlbGVjdG9yUG9wdXAsIGNhbGxiYWNrU3VibWl0Rm9ybX0pIHtcbiAgICBzdXBlcihzZWxlY3RvclBvcHVwKTtcbiAgICB0aGlzLmNhbGxiYWNrU3VibWl0Rm9ybSA9IGNhbGxiYWNrU3VibWl0Rm9ybTtcbiAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5mb3JtX19pbnB1dCcpO1xuXHR9XG5cbiAgX2dldElucHV0VmFsdWVzKCkge1xuICAgIHRoaXMuX2Zvcm1WYWx1ZXMgPSB7fTtcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB0aGlzLl9mb3JtVmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVyKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXIoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsICgpID0+IHtcbiAgICAgIHRoaXMuY2FsbGJhY2tTdWJtaXRGb3JtKHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cblxuICByZW5kZXJMb2FkaW5nKHRleHRCdXR0b25Mb2FkKSB7XG4gICAgc3VwZXIucmVuZGVyTG9hZGluZyh0ZXh0QnV0dG9uTG9hZCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JQb3B1cCkge1xuICAgIHN1cGVyKHNlbGVjdG9yUG9wdXApO1xuICAgIHRoaXMuZWxlbWVudFBvcHVwUGljdHVyZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGljdHVyZScpO1xuICAgIHRoaXMuZWxlbWVudFBvcHVwU2lnbmF0dXJlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zaWduYXR1cmUnKTtcblx0fVxuXG4gIG9wZW4oaXRlbSkge1xuICAgIHRoaXMuZWxlbWVudFBvcHVwUGljdHVyZS5zcmMgPSBpdGVtLmxpbms7XG4gICAgdGhpcy5lbGVtZW50UG9wdXBTaWduYXR1cmUuYWx0ID0gaXRlbS5uYW1lO1xuICAgIHRoaXMuZWxlbWVudFBvcHVwU2lnbmF0dXJlLnRleHRDb250ZW50ID0gaXRlbS5uYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxuICB9XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3Ioc2VsZWN0b3JQb3B1cCwgY2FsbGJhY2tTdWJtaXRGb3JtKSB7XG4gICAgc3VwZXIoc2VsZWN0b3JQb3B1cCk7XG4gICAgdGhpcy5jYWxsYmFja1N1Ym1pdEZvcm0gPSBjYWxsYmFja1N1Ym1pdEZvcm07XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtJyk7XG5cdH1cblxuICBzZXRFdmVudExpc3RlbmVyKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXIoKTtcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsICgpID0+IHtcbiAgICAgIHRoaXMuY2FsbGJhY2tTdWJtaXRGb3JtKHRoaXMuX2lkQ2FyZCk7XG4gICAgfSk7XG4gIH1cblxuICBzYXZlSWRDYXJkKGlkQ2FyZCkge1xuICAgIHJldHVybiB0aGlzLl9pZENhcmQgPSBpZENhcmQ7XG4gIH1cblxuICBzZXRFbGVtZW50Q2FyZChlbGVtZW50KSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gIH1cblxuICByZXR1cm5FbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgcmVuZGVyTG9hZGluZyh0ZXh0QnV0dG9uTG9hZCkge1xuICAgIHN1cGVyLnJlbmRlckxvYWRpbmcodGV4dEJ1dHRvbkxvYWQpO1xuICB9XG59XG4iLCJleHBvcnQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHtyZW5kZXJlcn0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXJIdG1sID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJJdGVtcyhkYXRhLCBpbmZvVXNlcikge1xuICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0sIGluZm9Vc2VyKSlcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lckh0bWwucHJlcGVuZChlbGVtZW50KTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7c2VsZWN0b3JOYW1lLCBzZWxlY3RvckNhcmVlciwgc2VsZWN0b3JBdmF0YXJ9KSB7XG4gICAgdGhpcy51c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3JOYW1lKTtcbiAgICB0aGlzLnVzZXJDYXJlZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yQ2FyZWVyKTtcbiAgICB0aGlzLnVzZXJBdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yQXZhdGFyKTtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIHRoaXMuYXJyYXlOZXdDYXJkRGF0YSA9IHtuYW1lOiB0aGlzLnVzZXJOYW1lLnRleHRDb250ZW50LCBjYXJlZXI6IHRoaXMudXNlckNhcmVlci50ZXh0Q29udGVudH07XG4gICAgcmV0dXJuIHRoaXMuYXJyYXlOZXdDYXJkRGF0YTtcbiAgfVxuXG4gIHNldFVzZXJJbmZvKHVzZXJJbmZvKSB7XG4gICAgdGhpcy51c2VyTmFtZS50ZXh0Q29udGVudCA9IHVzZXJJbmZvLm5hbWU7XG4gICAgdGhpcy51c2VyQ2FyZWVyLnRleHRDb250ZW50ID0gdXNlckluZm8uYWJvdXQ7XG4gICAgdGhpcy51c2VyQXZhdGFyLnNyYyA9IHVzZXJJbmZvLmF2YXRhcjtcbiAgfVxuXG59XG4iLCJleHBvcnQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Ioe2Jhc2VVcmwsIGhlYWRlcnN9KSB7XG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgX2dldFJlc3BvbnNlRGF0YShyZXMpIHtcbiAgICBpZiAocmVzLm9rKSB7XG4gICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQktC+0LfQvdC40LrQu9CwINC+0YjQuNCx0LrQsCDQv9GA0Lgg0L7RgtC/0YDQsNCy0LrQtSDQt9Cw0L/RgNC+0YHQsCDQvdCwINGB0LXRgNCy0LXRgDogJHtyZXMuc3RhdHVzfWApO1xuICB9XG5cbiAgICBnZXRJbmZyb21hdGlvblVzZXIoKSB7XG4gICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDMvdXNlcnMvbWUnLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzXG4gICAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fZ2V0UmVzcG9uc2VEYXRhKHJlcyk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgbG9hZENhcmRJbWFnZXMoKSB7XG4gICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDMvY2FyZHMnLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyc1xuICAgICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRSZXNwb25zZURhdGEocmVzKTtcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgY2hhbmdlUHJvZmlsZShhcnJheSkge1xuICAgICAgcmV0dXJuIGZldGNoKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQzL3VzZXJzL21lJywge1xuICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIG5hbWUgOiBgJHthcnJheS5maXJzdG5hbWV9YCxcbiAgICAgICAgICBhYm91dCA6IGAke2FycmF5LmNhcmVlcn1gXG4gICAgICAgIH0pXG4gICAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFJlc3BvbnNlRGF0YShyZXMpO1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBhZGROZXdDYXJkKGFycmF5KSB7XG4gICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDMvY2FyZHMnLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICBuYW1lIDogYXJyYXkubmFtZSxcbiAgICAgICAgICBsaW5rIDogYXJyYXkubGlua1xuICAgICAgICB9KVxuICAgICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRSZXNwb25zZURhdGEocmVzKTtcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgZGVsZXRlQ2FyZChpZENhcmQpIHtcbiAgICAgIHRoaXMubGluayA9ICgnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC00My9jYXJkcy8nICsgYCR7aWRDYXJkfWApO1xuICAgICAgcmV0dXJuIGZldGNoKHRoaXMubGluaywge1xuICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFJlc3BvbnNlRGF0YShyZXMpO1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBsaWtlUHV0KGlkQ2FyZCkge1xuICAgICAgdGhpcy5saW5rID0gKCdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQzL2NhcmRzLycgKyBgJHtpZENhcmR9YCArICcvbGlrZXMnKTtcbiAgICAgIHJldHVybiBmZXRjaCh0aGlzLmxpbmssIHtcbiAgICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgfSkudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX2dldFJlc3BvbnNlRGF0YShyZXMpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgIGxpa2VEZWxldGUoaWRDYXJkKSB7XG4gICAgICB0aGlzLmxpbmsgPSAoJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDMvY2FyZHMvJyArIGAke2lkQ2FyZH1gICsgJy9saWtlcycpO1xuICAgICAgcmV0dXJuIGZldGNoKHRoaXMubGluaywge1xuICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFJlc3BvbnNlRGF0YShyZXMpO1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBjaGFuZ2VBdmF0YXJQaWN0dXJlKGxpbmtQaWN0dXJlKSB7XG4gICAgICByZXR1cm4gZmV0Y2goJ2h0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS9jb2hvcnQtNDMvdXNlcnMvbWUvYXZhdGFyJywge1xuICAgICAgICBtZXRob2Q6ICdQQVRDSCcsXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIGF2YXRhciA6IGxpbmtQaWN0dXJlXG4gICAgICAgIH0pXG4gICAgICB9KS50aGVuKChyZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dldFJlc3BvbnNlRGF0YShyZXMpO1xuICAgICAgfSlcbiAgICB9XG4gIH1cblxuIiwiY29uc3QgZG9tQ2FyZENvbnRhaW5lciA9ICcuZWxlbWVudHMnO1xuY29uc3QgY2hhbmdlUHJvZmlsZUljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yICgnLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyk7XG5jb25zdCBhZGROZXdDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciAoJy5wcm9maWxlX19hZGQtYnV0dG9uJyk7XG5jb25zdCBjaGFuZ2VBdmF0YXJQaWN0dXJlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciAoJy5wcm9maWxlX19jb3ZlcicpO1xuXG5jb25zdCBpbnB1dE5hbWVGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0X3R5cGVfbmFtZScpO1xuY29uc3QgaW5wdXRDYXJlZXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0X3R5cGVfY2FyZWVyJyk7XG5cbmNvbnN0IGluZm8gPSB7fTtcblxuZXhwb3J0IHtkb21DYXJkQ29udGFpbmVyLCBjaGFuZ2VQcm9maWxlSWNvbiwgYWRkTmV3Q2FyZEJ1dHRvbiwgaW5wdXROYW1lRm9ybSwgaW5wdXRDYXJlZXJGb3JtLCBjaGFuZ2VBdmF0YXJQaWN0dXJlLCBpbmZvfTtcbiIsImltcG9ydCB7Q2FyZH0gZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCB7Rm9ybVZhbGlkYXRvcn0gZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm0uanMnO1xuaW1wb3J0IHsgU2VjdGlvbiB9IGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQgeyBBcGkgfSBmcm9tICcuLi9jb21wb25lbnRzL0FwaS5qcyc7XG5cbmltcG9ydCB7XG4gIGRvbUNhcmRDb250YWluZXIsXG4gIGNoYW5nZVByb2ZpbGVJY29uLFxuICBhZGROZXdDYXJkQnV0dG9uLFxuICBpbnB1dE5hbWVGb3JtLFxuICBpbnB1dENhcmVlckZvcm0sXG4gIGNoYW5nZUF2YXRhclBpY3R1cmUsXG4gIGluZm9cbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcblxuaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC00MycsXG4gIGhlYWRlcnM6IHtcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgIGF1dGhvcml6YXRpb246ICdiMzRhYmI5OS1iYjljLTQ5ZjAtYjRlZS05M2NiNjY2MTQxMDQnXG4gIH1cbn0pO1xuXG5Qcm9taXNlLmFsbChbXG4gIGFwaS5nZXRJbmZyb21hdGlvblVzZXIoKSxcbiAgYXBpLmxvYWRDYXJkSW1hZ2VzKClcbl0pXG4udGhlbigoW2luZm8sIGluaXRpYWxDYXJkc10pID0+IHtcbiAgY2xhc3NVc2VySW5mby5zZXRVc2VySW5mbyhpbmZvKTtcbiAgY2FyZHNMaXN0LnJlbmRlckl0ZW1zKGluaXRpYWxDYXJkcywgaW5mbyk7XG59KVxuLmNhdGNoKChlcnIpID0+IHtcbiAgY29uc29sZS5sb2coZXJyKTtcbn0pO1xuXG5jb25zdCBjYXJkc0xpc3QgPSBuZXcgU2VjdGlvbih7XG4gIHJlbmRlcmVyOiAoaXRlbSwgaW5mbykgPT4ge1xuICAgIGlmIChpbmZvLl9pZCA9PT0gaXRlbS5vd25lci5faWQpIHtcbiAgICAgIGNhcmRzTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQoaXRlbSwgdHJ1ZSkpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYXJkc0xpc3QuYWRkSXRlbShjcmVhdGVDYXJkKGl0ZW0sIGZhbHNlKSlcbiAgICB9XG4gIH1cbn0sXG5kb21DYXJkQ29udGFpbmVyXG4pO1xuXG5jb25zdCBjbGFzc1VzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgc2VsZWN0b3JOYW1lOiAnLnByb2ZpbGVfX25hbWUnLFxuICBzZWxlY3RvckNhcmVlcjogJy5wcm9maWxlX19jYXJlZXInLFxuICBzZWxlY3RvckF2YXRhcjogJy5wcm9maWxlX19hdmF0YXInXG59KVxuXG5jb25zdCBjb25maWcgPSB7XG4gIGZvcm1TZWxlY3RvcjogJy5mb3JtJyxcbiAgaW5wdXRTZWxlY3RvcjogJy5mb3JtX19pbnB1dCcsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLmZvcm1fX3N1Ym1pdCcsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdmb3JtX19zdWJtaXRfaW5hY3RpdmUnLFxuICBpbnB1dEVycm9yQ2xhc3M6ICdmb3JtX19pbnB1dF90eXBlX2Vycm9yJyxcbiAgZXJyb3JDbGFzczogJ2Zvcm1fX2lucHV0LWVycm9yX2FjdGl2ZSdcbn07XG5cbmNvbnN0IGZvcm1WYWxpZGF0b3JzID0ge307XG5cbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpKTtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCB2YWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtRWxlbWVudCwgY29uZmlnKTtcbiAgICBjb25zdCBmb3JtTmFtZSA9IGZvcm1FbGVtZW50LmdldEF0dHJpYnV0ZSgnbmFtZScpO1xuXG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybU5hbWVdID0gdmFsaWRhdG9yO1xuICAgIHZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG4gIH0pO1xufTtcblxuZW5hYmxlVmFsaWRhdGlvbihjb25maWcpO1xuXG5cbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF90eXBlX2ltYWdlJyk7XG5wb3B1cEltYWdlLnNldEV2ZW50TGlzdGVuZXIoKTtcblxuY29uc3QgcG9wdXBDb25maXJtID0gbmV3IFBvcHVwV2l0aENvbmZpcm0oJy5wb3B1cF90eXBlX2NvbmZpcm0nLCAoaWRDYXJkQ2xhc3MpID0+IHtcbiAgcG9wdXBDb25maXJtLnJlbmRlckxvYWRpbmcoJ9Cj0LTQsNC70Y/Rji4uLicpO1xuICBhcGkuZGVsZXRlQ2FyZChpZENhcmRDbGFzcylcbiAgLnRoZW4oKCkgPT4ge1xuICAgIHBvcHVwQ29uZmlybS5jbG9zZSgpO1xuICAgIGNvbnN0IGVsZW1lbnQgPSBwb3B1cENvbmZpcm0ucmV0dXJuRWxlbWVudCgpO1xuICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gIH0pXG4gIC5jYXRjaCgoZXJyKSA9PiB7Y29uc29sZS5sb2coZXJyKX0pXG4gIC5maW5hbGx5KCgpID0+IHtwb3B1cENvbmZpcm0ucmVuZGVyTG9hZGluZygn0JTQsCcpO30pO1xufSk7XG5cbnBvcHVwQ29uZmlybS5zZXRFdmVudExpc3RlbmVyKCk7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSwgY2hlY2tVc2VySWQpIHtcbiAgY29uc3QgbmV3Q2FyZENvbnRhaW5lciA9IG5ldyBDYXJkKGl0ZW0sICcudGVtcGxhdGVfX3NpeC1ib3hlcycsICgpID0+IHtcbiAgICBwb3B1cEltYWdlLm9wZW4oaXRlbSk7XG4gIH0sIChpZENhcmQsIGVsZW1lbnRDYXJkKSA9PiB7XG4gICAgcG9wdXBDb25maXJtLm9wZW4oKTtcbiAgICBwb3B1cENvbmZpcm0uc2F2ZUlkQ2FyZChpZENhcmQpO1xuICAgIHBvcHVwQ29uZmlybS5zZXRFbGVtZW50Q2FyZChlbGVtZW50Q2FyZCk7XG4gIH0sXG4gIChkYXRhKSA9PiB7XG4gICAgYXBpLmxpa2VQdXQoZGF0YS5faWQpXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgbmV3Q2FyZENvbnRhaW5lci5jaGFuZ2VOdW1iZXJMaWtlcyhyZXMpO1xuICAgICAgbmV3Q2FyZENvbnRhaW5lci50b2dnbGVCdXR0b25MaWtlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KVxuICB9LFxuICAoZGF0YSkgPT4ge1xuICAgIGFwaS5saWtlRGVsZXRlKGRhdGEuX2lkKVxuICAgIC50aGVuKChyZXMpID0+IHtcbiAgICAgIG5ld0NhcmRDb250YWluZXIuY2hhbmdlTnVtYmVyTGlrZXMocmVzKTtcbiAgICAgIG5ld0NhcmRDb250YWluZXIudG9nZ2xlQnV0dG9uTGlrZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgfVxuICApO1xuICBuZXdDYXJkQ29udGFpbmVyLmdldFN0YXR1c0lkVXNlcihjaGVja1VzZXJJZCk7XG4gIGNvbnN0IG5ld0NhcmRFbGVtZW50ID0gbmV3Q2FyZENvbnRhaW5lci5nZW5lcmF0ZUVsZW1lbnQoKTtcbiAgcmV0dXJuIG5ld0NhcmRFbGVtZW50O1xufVxuXG5jb25zdCBmb3JtTmV3Q2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcbiAgc2VsZWN0b3JQb3B1cDogJy5wb3B1cF90eXBlX25ldy1jYXJkJyxcbiAgY2FsbGJhY2tTdWJtaXRGb3JtOiAoZm9ybWRhdGEpID0+IHtcbiAgICBmb3JtTmV3Q2FyZC5yZW5kZXJMb2FkaW5nKCfQodC+0LfQtNCw0Y4uLi4nKTtcbiAgICBhcGkuYWRkTmV3Q2FyZChmb3JtZGF0YSlcbiAgICAudGhlbigobmV3Q2FyZCkgPT4ge1xuICAgICAgY2FyZHNMaXN0LmFkZEl0ZW0oY3JlYXRlQ2FyZChuZXdDYXJkLCB0cnVlKSk7XG4gICAgICBmb3JtTmV3Q2FyZC5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtjb25zb2xlLmxvZyhlcnIpO30pXG4gICAgLmZpbmFsbHkoKCkgPT4ge2Zvcm1OZXdDYXJkLnJlbmRlckxvYWRpbmcoJ9Ch0L7Qt9C00LDRgtGMJyk7fSlcbiAgfVxuXG59KTtcblxuZm9ybU5ld0NhcmQuc2V0RXZlbnRMaXN0ZW5lcigpO1xuXG5jb25zdCBmb3JtTmV3QXZhdGFyID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzZWxlY3RvclBvcHVwOiAnLnBvcHVwX3R5cGVfYXZhdGFyJyxcbiAgY2FsbGJhY2tTdWJtaXRGb3JtOiAoZm9ybWRhdGEpID0+IHtcbiAgICBmb3JtTmV3QXZhdGFyLnJlbmRlckxvYWRpbmcoJ9Ch0L7RhdGA0LDQvdGP0Y4uLi4nKTtcbiAgICBhcGkuY2hhbmdlQXZhdGFyUGljdHVyZShmb3JtZGF0YS5saW5rKVxuICAgIC50aGVuKCh1c2VySW5mbykgPT4ge1xuICAgICAgY2xhc3NVc2VySW5mby5zZXRVc2VySW5mbyh1c2VySW5mbyk7XG4gICAgICBmb3JtTmV3QXZhdGFyLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge2NvbnNvbGUubG9nKGVycil9KVxuICAgIC5maW5hbGx5KCgpID0+IHtmb3JtTmV3QXZhdGFyLnJlbmRlckxvYWRpbmcoJ9Ch0L7RhdGA0LDQvdC40YLRjCcpO30pO1xuICB9XG4gIH1cbilcblxuZm9ybU5ld0F2YXRhci5zZXRFdmVudExpc3RlbmVyKCk7XG5cbmFkZE5ld0NhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1WYWxpZGF0b3JzWydwcm9maWxlLWNhcmQnXS5yZXNldFZhbGlkYXRpb24oKTtcbiAgZm9ybU5ld0NhcmQub3BlbigpO1xufSlcblxuY2hhbmdlQXZhdGFyUGljdHVyZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgZm9ybVZhbGlkYXRvcnNbJ3Byb2ZpbGUtYXZhdGFyJ10ucmVzZXRWYWxpZGF0aW9uKCk7XG4gIGZvcm1OZXdBdmF0YXIub3BlbigpO1xufSlcblxuY29uc3QgZm9ybVByb2ZpbGVVc2VyID0gbmV3IFBvcHVwV2l0aEZvcm0oe1xuICBzZWxlY3RvclBvcHVwOiAnLnBvcHVwX3R5cGVfZWRpdCcsXG4gIGNhbGxiYWNrU3VibWl0Rm9ybTogKGl0ZW0pID0+IHtcbiAgICBmb3JtUHJvZmlsZVVzZXIucmVuZGVyTG9hZGluZygn0KHQvtGF0YDQsNC90Y/Rji4uLicpO1xuICAgIGFwaS5jaGFuZ2VQcm9maWxlKGl0ZW0pXG4gICAgLnRoZW4oKHJlcykgPT4ge1xuICAgICAgY2xhc3NVc2VySW5mby5zZXRVc2VySW5mbyhyZXMpO1xuICAgICAgZm9ybVByb2ZpbGVVc2VyLmNsb3NlKCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGZvcm1Qcm9maWxlVXNlci5yZW5kZXJMb2FkaW5nKCfQodC+0YXRgNCw0L3QuNGC0YwnKTtcbiAgICB9KTtcblxuICB9XG59KTtcblxuZm9ybVByb2ZpbGVVc2VyLnNldEV2ZW50TGlzdGVuZXIoKTtcblxuY2hhbmdlUHJvZmlsZUljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGZvcm1WYWxpZGF0b3JzWydwcm9maWxlLWVkaXQnXS5yZXNldFZhbGlkYXRpb24oKTtcbiAgY29uc3QgZG9tVXNlckluZm9ybWF0aW9uQ29udGFpbmVyID0gY2xhc3NVc2VySW5mby5nZXRVc2VySW5mbygpO1xuICBpbnB1dE5hbWVGb3JtLnZhbHVlID0gZG9tVXNlckluZm9ybWF0aW9uQ29udGFpbmVyLm5hbWU7XG4gIGlucHV0Q2FyZWVyRm9ybS52YWx1ZSA9IGRvbVVzZXJJbmZvcm1hdGlvbkNvbnRhaW5lci5jYXJlZXI7XG4gIGZvcm1Qcm9maWxlVXNlci5vcGVuKCk7XG59KVxuIl0sIm5hbWVzIjpbIkNhcmQiLCJkYXRhIiwic2VsZWN0b3IiLCJyZW5kZXJlclBvcHVwSW1hZ2UiLCJyZW5kZXJQb3B1cENvbmZpcm0iLCJoYW5kbGVyTGlrZUFjdGl2ZSIsImhhbmRsZXJMaWtlTm90QWN0aXZlIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9vd25lcklkIiwib3duZXIiLCJfaWQiLCJfY2FyZElkIiwiX3NlbGVjdG9yIiwiX2VsZW1lbnQiLCJfZ2V0RWxlbWVudCIsIl9zZXRFdmVudExpc3RlbmVyIiwiX2NhcmRJbWFnZSIsInNyYyIsImFsdCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsImNoYW5nZU51bWJlckxpa2VzIiwiYXJyYXlMaWtlcyIsImxpa2VzIiwibGVuZ3RoIiwiY2FyZEVsZW1lbnQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJib29sZWFuU3RhdHVzIiwiX2Jvb2xlYW5TdGF0dXMiLCJfYnV0dG9uIiwiX3RyYXNoQnV0dG9uIiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNvbnRhaW5zIiwidG9nZ2xlIiwiRm9ybVZhbGlkYXRvciIsImZvcm1FbGVtZW50IiwiY29uZmlnIiwiX2Zvcm1FbGVtZW50IiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImV2dCIsInByZXZlbnREZWZhdWx0IiwiX2hhc0ludmFsaWRJbnB1dCIsIl9idXR0b25FbGVtZW50IiwiZGlzYWJsZWQiLCJyZW1vdmUiLCJfaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJpbnB1dEVsZW1lbnQiLCJfaGFuZGxlSW5wdXRFbGVtZW50IiwiX2lzVmFsaWQiLCJzb21lIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsIl9lcnJvckVsZW1lbnQiLCJpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiUG9wdXAiLCJzZWxlY3RvclBvcHVwIiwiX3BvcHVwIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJrZXkiLCJjbG9zZSIsInRhcmdldCIsInRleHRCdXR0b25Mb2FkIiwiX2Zvcm0iLCJQb3B1cFdpdGhGb3JtIiwiY2FsbGJhY2tTdWJtaXRGb3JtIiwiX2Zvcm1WYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJQb3B1cFdpdGhJbWFnZSIsImVsZW1lbnRQb3B1cFBpY3R1cmUiLCJlbGVtZW50UG9wdXBTaWduYXR1cmUiLCJpdGVtIiwiUG9wdXBXaXRoQ29uZmlybSIsIl9pZENhcmQiLCJpZENhcmQiLCJlbGVtZW50IiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVySHRtbCIsImluZm9Vc2VyIiwicHJlcGVuZCIsIlVzZXJJbmZvIiwic2VsZWN0b3JOYW1lIiwic2VsZWN0b3JDYXJlZXIiLCJzZWxlY3RvckF2YXRhciIsInVzZXJOYW1lIiwidXNlckNhcmVlciIsInVzZXJBdmF0YXIiLCJhcnJheU5ld0NhcmREYXRhIiwiY2FyZWVyIiwidXNlckluZm8iLCJhYm91dCIsImF2YXRhciIsIkFwaSIsImJhc2VVcmwiLCJoZWFkZXJzIiwicmVzIiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsIl9nZXRSZXNwb25zZURhdGEiLCJhcnJheSIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiZmlyc3RuYW1lIiwibGlua1BpY3R1cmUiLCJjaGFuZ2VQcm9maWxlSWNvbiIsImFkZE5ld0NhcmRCdXR0b24iLCJjaGFuZ2VBdmF0YXJQaWN0dXJlIiwiaW5wdXROYW1lRm9ybSIsImlucHV0Q2FyZWVyRm9ybSIsImFwaSIsImF1dGhvcml6YXRpb24iLCJhbGwiLCJnZXRJbmZyb21hdGlvblVzZXIiLCJsb2FkQ2FyZEltYWdlcyIsImluZm8iLCJpbml0aWFsQ2FyZHMiLCJjbGFzc1VzZXJJbmZvIiwic2V0VXNlckluZm8iLCJjYXJkc0xpc3QiLCJyZW5kZXJJdGVtcyIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImFkZEl0ZW0iLCJjcmVhdGVDYXJkIiwiZm9ybVZhbGlkYXRvcnMiLCJ2YWxpZGF0b3IiLCJmb3JtTmFtZSIsImdldEF0dHJpYnV0ZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwb3B1cEltYWdlIiwic2V0RXZlbnRMaXN0ZW5lciIsInBvcHVwQ29uZmlybSIsImlkQ2FyZENsYXNzIiwicmVuZGVyTG9hZGluZyIsImRlbGV0ZUNhcmQiLCJyZXR1cm5FbGVtZW50IiwiZmluYWxseSIsImNoZWNrVXNlcklkIiwibmV3Q2FyZENvbnRhaW5lciIsIm9wZW4iLCJlbGVtZW50Q2FyZCIsInNhdmVJZENhcmQiLCJzZXRFbGVtZW50Q2FyZCIsImxpa2VQdXQiLCJ0b2dnbGVCdXR0b25MaWtlIiwibGlrZURlbGV0ZSIsImdldFN0YXR1c0lkVXNlciIsImdlbmVyYXRlRWxlbWVudCIsImZvcm1OZXdDYXJkIiwiZm9ybWRhdGEiLCJhZGROZXdDYXJkIiwibmV3Q2FyZCIsImZvcm1OZXdBdmF0YXIiLCJyZXNldFZhbGlkYXRpb24iLCJmb3JtUHJvZmlsZVVzZXIiLCJjaGFuZ2VQcm9maWxlIiwiZG9tVXNlckluZm9ybWF0aW9uQ29udGFpbmVyIiwiZ2V0VXNlckluZm8iXSwic291cmNlUm9vdCI6IiJ9