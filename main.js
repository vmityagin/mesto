(()=>{"use strict";var e={};function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}e.p="";var n=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._selector=n,this.rendererPopupImage=r}var n,r;return n=e,(r=[{key:"generateElement",value:function(){return this._element=this._getElement(),this._setEventListener(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element.querySelector(".element__title").textContent=this._name,this._element}},{key:"_getElement",value:function(){var e=document.querySelector(this._selector).content.querySelector(".element").cloneNode(!0);return this._cardImage=e.querySelector(".element__image"),this._element=e,this._element}},{key:"_setEventListener",value:function(){var e=this;this._button=this._element.querySelector(".element__button"),this._trashButton=this._element.querySelector(".element__trash-icon"),this._button.addEventListener("click",(function(){e._handleLikeActive()})),this._trashButton.addEventListener("click",(function(){e._removeCardElement()})),this._cardImage.addEventListener("click",this.rendererPopupImage)}},{key:"_handleLikeActive",value:function(){this._button.classList.toggle("element__button_active")}},{key:"_removeCardElement",value:function(){this._element.remove()}}])&&t(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),e}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var o=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListener()}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_setEventListener",value:function(){var e=this;this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._handleInputElement=t,e._toggleButtonState(),e._isValid()}))}))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_isValid",value:function(){this._handleInputElement.validity.valid?this._hideInputError():this._showInputError()}},{key:"_showInputError",value:function(){this._errorElement=this._formElement.querySelector(".".concat(this._handleInputElement.id,"-error")),this._handleInputElement.classList.add(this._inputErrorClass),this._errorElement.textContent=this._handleInputElement.validationMessage,this._errorElement.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(){this._errorElement=this._formElement.querySelector(".".concat(this._handleInputElement.id,"-error")),this._handleInputElement.classList.remove(this._inputErrorClass),this._errorElement.classList.remove(this._errorClass),this._errorElement.textContent=""}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._handleInputElement=t,e._hideInputError()}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(this._selector),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_active")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_active")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListener",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_active")&&e.close(),t.target.classList.contains("single__cross")&&e.close()}))}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},s.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t,n=e.selectorPopup,r=e.callbackSubmitForm;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n)).callbackSubmitForm=r,t._form=t._popup.querySelector(".form"),t._inputList=t._popup.querySelectorAll(".form__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){return e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListener",value:function(){var e=this;s(h(a.prototype),"setEventListener",this).call(this),this._form.addEventListener("submit",(function(){e.callbackSubmitForm(e._getInputValues()),e.close()}))}},{key:"close",value:function(){s(h(a.prototype),"close",this).call(this),this._form.reset()}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(){return d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},d.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function b(e,t){return b=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},b(e,t)}function E(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&b(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e)).elementPopupPicture=t._popup.querySelector(".popup__picture"),t.elementPopupSignature=t._popup.querySelector(".popup__signature"),t}return t=a,(n=[{key:"open",value:function(e){this.elementPopupPicture.src=e.linkCard,this.elementPopupSignature.alt=e.nameCard,this.elementPopupSignature.textContent=e.nameCard,d(g(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(a);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var k=function(){function e(t,n){var r=t.data,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._containerHtml=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._containerHtml.prepend(e)}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.selectorName,r=t.selectorCareer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.userName=document.querySelector(n),this.userCareer=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this.arrayNewCardData={name:this.userName.textContent,career:this.userCareer.textContent},this.arrayNewCardData}},{key:"setUserInfo",value:function(e){this.userName.textContent=e.firstname,this.userCareer.textContent=e.career}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.headersRequest={authorization:"b34abb99-bb9c-49f0-b4ee-93cb66614104","Content-Type":"application/json"}}var t,n;return t=e,(n=[{key:"getInfromationUser",value:function(e){return this.link=e,fetch(this.link,{method:"GET",headers:this.headersRequest}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка при отправке запроса на сервер: ".concat(e.status))}))}},{key:"loadCardImages",value:function(e){return this.link=e,fetch(this.link,{method:"GET",headers:this.headersRequest}).then((function(e){return e.ok?e.json():Promise.reject("Возникла ошибка при отправке запроса на сервер: ".concat(e.status))}))}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();e.p,e.p,e.p,e.p,e.p,e.p;var L,I=document.querySelector(".profile__edit-button"),q=document.querySelector(".profile__add-button"),R=document.querySelector(".form__input_type_name"),B=document.querySelector(".form__input_type_career"),x=document.querySelector(".profile__name"),T=document.querySelector(".profile__career"),V=document.querySelector(".profile__avatar"),A={};L={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(L.formSelector)).forEach((function(e){var t=new o(e,L),n=e.getAttribute("name");A[n]=t,t.enableValidation()}));var N=new w(".popup_type_image");function D(e){return new n(e,".template__six-boxes",(function(){N.open(e)})).generateElement()}N.setEventListener();var U=new m({selectorPopup:".popup_type_new-card",callbackSubmitForm:function(e){cardsList.addItem(D(e))}});U.setEventListener();var F=new O({selectorName:".profile__name",selectorCareer:".profile__career"});q.addEventListener("click",(function(){A["profile-card"].resetValidation(),U.open()}));var G=new m({selectorPopup:".popup_type_edit",callbackSubmitForm:function(e){F.setUserInfo(e)}});G.setEventListener(),I.addEventListener("click",(function(){A["profile-edit"].resetValidation();var e=F.getUserInfo();R.value=e.name,B.value=e.career,G.open()}));var H=new j;H.getInfromationUser("https://mesto.nomoreparties.co/v1/cohort-43/users/me").then((function(e){x.textContent=e.name,T.textContent=e.about,V.src=e.avatar})).catch((function(e){console.log(e)})),H.loadCardImages("https://mesto.nomoreparties.co/v1/cohort-43/cards").then((function(e){console.log(e);var t=new k({data:e,renderer:function(e){t.addItem(D(e))}},".elements");t.renderItems()})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,